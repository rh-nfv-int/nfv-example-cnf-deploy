---
- name: set local fact for trex pod networks
  set_fact:
    networks_trex: []
    packet_gen_net: "{{ packet_generator_networks if enable_lb|bool else cnf_app_networks }}"
    trex_app_run_passed: false
# TODO(skramaja): This logic to be improved for multiple
# networks, lets fail it if the length is > 1
- fail:
    msg: "Need to rewrite the mac merging logic"
  when: "packet_gen_net|length != 1"
- name: create network list for trex with hardcoded macs
  set_fact:
    networks_trex: "{{ networks_trex + [ item | combine({ 'mac': trex_mac_list[idx:idx+item.count] }) ] }}"
  loop: "{{ packet_gen_net }}"
  loop_control:
    index_var: idx

- name: create cr for trex server
  k8s:
    definition: "{{ lookup('template', 'trex-server-cr.yaml.j2') }}"
- name: check trex pod status to be running
  k8s_info:
    namespace: "{{ cnf_namespace }}"
    kind: Pod
    label_selectors:
      - example-cnf-type=pkt-gen
  register: trex_result
  retries: 60
  delay: 5
  until:
    - "trex_result.resources|length > 0"
    - "'status' in trex_result.resources[0]"
    - "'phase' in trex_result.resources[0].status"
    - "trex_result.resources[0].status.phase == 'Running'"
- name: set trex run status if passed
  set_fact:
    trex_app_run_passed: true
  when: trex_result.resources|length > 0

- name: trexapp block
  when: enable_trex_app|bool
  block:
  - name: set trex app cr name
    set_fact:
      duration: 120
  - name: create cr for trex app
    k8s:
      definition: "{{ lookup('template', 'trex-app-cr.yaml.j2') }}"
    vars:
      packet_rate: 10kpps
      packet_size: 64
  - name: wait for trex app run start event
    k8s_info:
      namespace: "{{ cnf_namespace }}"
      kind: Event
      field_selectors:
        - "reason==TestStarted"
        - "involvedObject.name={{ trex_app_cr_name }}"
    register: trex_event
    retries: 60
    delay: 5

  - name: wait trex app run complete event
    k8s_info:
      namespace: "{{ cnf_namespace }}"
      kind: Event
      field_selectors:
        - "reason==TestCompleted"
        - "involvedObject.name={{ trex_app_cr_name }}"
    register: trex_event
    retries: 60
    delay: 5
    until: trex_event.resources|length > 0

  - name: get test passed event from trex
    k8s_info:
      namespace: "{{ cnf_namespace }}"
      kind: Event
      field_selectors:
        - "reason==TestPassed"
        - "involvedObject.name={{ trex_app_cr_name }}"
    register: trex_result

  - name: Get all events from TRex
    k8s_info:
      namespace: "{{ cnf_namespace }}"
      kind: Event
      field_selectors:
        - "involvedObject.name={{ trex_app_cr_name }}"
    register: trex_all_events

  - name: Retrieve all pods from cnf namespace
    k8s_info:
      namespace: "{{ cnf_namespace }}"
      kind: Pod

  - name: Search for all running pods
    k8s_info:
      namespace: "{{ cnf_namespace }}"
      kind: Pod
      field_selectors:
        - status.phase=Running

  - name: get packet matched event from trex
    k8s_info:
      namespace: "{{ cnf_namespace }}"
      kind: Event
      field_selectors:
        - "reason==PacketMatched"
        - "involvedObject.name={{ trex_app_cr_name }}"
    register: trex_result
    retries: 60
    delay: 5
    until: "trex_result.resources|length > 0"

  - name: set trex run status if passed
    set_fact:
      trex_app_run_passed: true
    when: trex_result.resources|length > 0
